{"ast":null,"code":"import axios from 'axios';\n\n// ✅ Configurar la URL base desde el entorno (.env)\nconst API_BASE_URL = process.env.VUE_APP_API_URL;\n\n// ✅ Crear instancia de Axios\nconst apiInstance = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000\n});\n\n// ✅ Interceptor: agregar token automáticamente a las peticiones\napiInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Token ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// ✅ Interceptor: manejar errores de autenticación\napiInstance.interceptors.response.use(response => response, error => {\n  if (error.response?.status === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// ✅ Exportar las funciones de API como objeto agrupado\nconst api = {\n  // --- Autenticación ---\n  register(userData) {\n    return apiInstance.post('/api/auth/register/', userData);\n  },\n  login(credentials) {\n    return apiInstance.post('/api/auth/login/', credentials);\n  },\n  logout() {\n    return apiInstance.post('/api/auth/logout/');\n  },\n  getProfile() {\n    return apiInstance.get('/api/auth/profile/');\n  },\n  getAuthStatus() {\n    return apiInstance.get('/api/auth/status/');\n  },\n  // --- Estudiantes ---\n  getStudents() {\n    return apiInstance.get('/api/students/');\n  },\n  getStudent(id) {\n    return apiInstance.get(`/api/students/${id}/`);\n  },\n  createStudent(studentData) {\n    return apiInstance.post('/api/students/', studentData);\n  },\n  updateStudent(id, studentData) {\n    return apiInstance.put(`/api/students/${id}/`, studentData);\n  },\n  deleteStudent(id) {\n    return apiInstance.delete(`/api/students/${id}/`);\n  },\n  // --- Docentes ---\n  getTeachers() {\n    return apiInstance.get('/api/teachers/');\n  },\n  createTeacher(data) {\n    return apiInstance.post('/api/teachers/', data);\n  },\n  updateTeacher(id, teacher) {\n    return apiInstance.put(`/api/teachers/${id}/`, teacher);\n  },\n  deleteTeacher(id) {\n    return apiInstance.delete(`/api/teachers/${id}/`);\n  },\n  // --- Cursos ---\n  getCourses() {\n    return apiInstance.get('/api/courses/');\n  },\n  createCourse(data) {\n    return apiInstance.post('/api/courses/', data);\n  },\n  updateCourse(id, data) {\n    return apiInstance.put(`/api/courses/${id}/`, data);\n  },\n  deleteCourse(id) {\n    return apiInstance.delete(`/api/courses/${id}/`);\n  },\n  // --- Usuarios ---\n  getUsers() {\n    return apiInstance.get('/api/users/');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","VUE_APP_API_URL","apiInstance","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","api","register","userData","post","login","credentials","logout","getProfile","get","getAuthStatus","getStudents","getStudent","id","createStudent","studentData","updateStudent","put","deleteStudent","delete","getTeachers","createTeacher","data","updateTeacher","teacher","deleteTeacher","getCourses","createCourse","updateCourse","deleteCourse","getUsers"],"sources":["D:/ANuevo1/CunaFrontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// ✅ Configurar la URL base desde el entorno (.env)\nconst API_BASE_URL = process.env.VUE_APP_API_URL;\n\n// ✅ Crear instancia de Axios\nconst apiInstance = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000,\n});\n\n// ✅ Interceptor: agregar token automáticamente a las peticiones\napiInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Token ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// ✅ Interceptor: manejar errores de autenticación\napiInstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// ✅ Exportar las funciones de API como objeto agrupado\nconst api = {\n  // --- Autenticación ---\n  register(userData) {\n    return apiInstance.post('/api/auth/register/', userData);\n  },\n\n  login(credentials) {\n    return apiInstance.post('/api/auth/login/', credentials);\n  },\n\n  logout() {\n    return apiInstance.post('/api/auth/logout/');\n  },\n\n  getProfile() {\n    return apiInstance.get('/api/auth/profile/');\n  },\n\n  getAuthStatus() {\n    return apiInstance.get('/api/auth/status/');\n  },\n\n  // --- Estudiantes ---\n  getStudents() {\n    return apiInstance.get('/api/students/');\n  },\n\n  getStudent(id) {\n    return apiInstance.get(`/api/students/${id}/`);\n  },\n\n  createStudent(studentData) {\n    return apiInstance.post('/api/students/', studentData);\n  },\n\n  updateStudent(id, studentData) {\n    return apiInstance.put(`/api/students/${id}/`, studentData);\n  },\n\n  deleteStudent(id) {\n    return apiInstance.delete(`/api/students/${id}/`);\n  },\n\n  // --- Docentes ---\n  getTeachers() {\n    return apiInstance.get('/api/teachers/');\n  },\n\n  createTeacher(data) {\n    return apiInstance.post('/api/teachers/', data);\n  },\n\n  updateTeacher(id, teacher) {\n    return apiInstance.put(`/api/teachers/${id}/`, teacher);\n  },\n\n  deleteTeacher(id) {\n    return apiInstance.delete(`/api/teachers/${id}/`);\n  },\n\n  // --- Cursos ---\n  getCourses() {\n    return apiInstance.get('/api/courses/');\n  },\n\n  createCourse(data) {\n    return apiInstance.post('/api/courses/', data);\n  },\n\n  updateCourse(id, data) {\n    return apiInstance.put(`/api/courses/${id}/`, data);\n  },\n\n  deleteCourse(id) {\n    return apiInstance.delete(`/api/courses/${id}/`);\n  },\n\n  // --- Usuarios ---\n  getUsers() {\n    return apiInstance.get('/api/users/');\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}